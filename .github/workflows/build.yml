name: build docker image

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  DOCKER_REPO: jonoh/openvpn-socks

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: "${{ env.DOCKER_REPO }}:${{ github.sha }}"
      
      - name: Set docker tag
        id: docker_tag
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          GIT_SHA: ${{ github.sha }}
        run: |
          OPENVPN_VERSION_RE="([0-9]\.[0-9]\.[0-9])"
          if [[ "$(docker run --rm --entrypoint openvpn "$DOCKER_REPO:$GIT_SHA" --version)" =~ ${OPENVPN_VERSION_RE} ]]; then
            echo "::set-output name=DOCKER_TAG::${BASH_REMATCH[1]}"
          fi

      - name: Rebuild and push with tags
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          cache-from: "${{ env.DOCKER_REPO }}:${{ github.sha }}"
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: "${{ env.DOCKER_REPO }}:${{ steps.docker_tag.outputs.DOCKER_TAG }},${{ env.DOCKER_REPO }}:latest"

      - name: Update repo description
        uses: peter-evans/dockerhub-description@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ env.DOCKER_REPO }}
